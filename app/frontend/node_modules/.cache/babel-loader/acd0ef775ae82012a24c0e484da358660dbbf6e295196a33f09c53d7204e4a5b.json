{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Completions = exports.ChatCompletionStream = exports.ParsingToolFunction = exports.ParsingFunction = exports.ChatCompletionStreamingRunner = exports.ChatCompletionRunner = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst ChatCompletionRunner_1 = require(\"openai/lib/ChatCompletionRunner\");\nvar ChatCompletionRunner_2 = require(\"openai/lib/ChatCompletionRunner\");\nObject.defineProperty(exports, \"ChatCompletionRunner\", {\n  enumerable: true,\n  get: function () {\n    return ChatCompletionRunner_2.ChatCompletionRunner;\n  }\n});\nconst ChatCompletionStreamingRunner_1 = require(\"openai/lib/ChatCompletionStreamingRunner\");\nvar ChatCompletionStreamingRunner_2 = require(\"openai/lib/ChatCompletionStreamingRunner\");\nObject.defineProperty(exports, \"ChatCompletionStreamingRunner\", {\n  enumerable: true,\n  get: function () {\n    return ChatCompletionStreamingRunner_2.ChatCompletionStreamingRunner;\n  }\n});\nvar RunnableFunction_1 = require(\"openai/lib/RunnableFunction\");\nObject.defineProperty(exports, \"ParsingFunction\", {\n  enumerable: true,\n  get: function () {\n    return RunnableFunction_1.ParsingFunction;\n  }\n});\nObject.defineProperty(exports, \"ParsingToolFunction\", {\n  enumerable: true,\n  get: function () {\n    return RunnableFunction_1.ParsingToolFunction;\n  }\n});\nconst ChatCompletionStream_1 = require(\"openai/lib/ChatCompletionStream\");\nvar ChatCompletionStream_2 = require(\"openai/lib/ChatCompletionStream\");\nObject.defineProperty(exports, \"ChatCompletionStream\", {\n  enumerable: true,\n  get: function () {\n    return ChatCompletionStream_2.ChatCompletionStream;\n  }\n});\nclass Completions extends resource_1.APIResource {\n  runFunctions(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner_1.ChatCompletionStreamingRunner.runFunctions(this._client.chat.completions, body, options);\n    }\n    return ChatCompletionRunner_1.ChatCompletionRunner.runFunctions(this._client.chat.completions, body, options);\n  }\n  runTools(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner_1.ChatCompletionStreamingRunner.runTools(this._client.chat.completions, body, options);\n    }\n    return ChatCompletionRunner_1.ChatCompletionRunner.runTools(this._client.chat.completions, body, options);\n  }\n  /**\n   * Creates a chat completion stream\n   */\n  stream(body, options) {\n    return ChatCompletionStream_1.ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n  }\n}\nexports.Completions = Completions;","map":{"version":3,"names":["resource_1","require","ChatCompletionRunner_1","ChatCompletionRunner_2","Object","defineProperty","exports","enumerable","get","ChatCompletionRunner","ChatCompletionStreamingRunner_1","ChatCompletionStreamingRunner_2","ChatCompletionStreamingRunner","RunnableFunction_1","ParsingFunction","ParsingToolFunction","ChatCompletionStream_1","ChatCompletionStream_2","ChatCompletionStream","Completions","APIResource","runFunctions","body","options","stream","_client","chat","completions","runTools","createChatCompletion"],"sources":["/Users/wavydang/Desktop/GitDesktop/Bitcamp24/app/frontend/node_modules/openai/src/resources/beta/chat/completions.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport * as Core from \"../../../core\";\nimport { APIResource } from \"../../../resource\";\nimport { ChatCompletionRunner, ChatCompletionFunctionRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nexport { ChatCompletionRunner, ChatCompletionFunctionRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nimport {\n  ChatCompletionStreamingRunner,\n  ChatCompletionStreamingFunctionRunnerParams,\n} from \"../../../lib/ChatCompletionStreamingRunner\";\nexport {\n  ChatCompletionStreamingRunner,\n  ChatCompletionStreamingFunctionRunnerParams,\n} from \"../../../lib/ChatCompletionStreamingRunner\";\nimport { BaseFunctionsArgs } from \"../../../lib/RunnableFunction\";\nexport {\n  RunnableFunction,\n  RunnableFunctions,\n  RunnableFunctionWithParse,\n  RunnableFunctionWithoutParse,\n  ParsingFunction,\n  ParsingToolFunction,\n} from \"../../../lib/RunnableFunction\";\nimport { ChatCompletionToolRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nexport { ChatCompletionToolRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nimport { ChatCompletionStreamingToolRunnerParams } from \"../../../lib/ChatCompletionStreamingRunner\";\nexport { ChatCompletionStreamingToolRunnerParams } from \"../../../lib/ChatCompletionStreamingRunner\";\nimport { ChatCompletionStream, type ChatCompletionStreamParams } from \"../../../lib/ChatCompletionStream\";\nexport { ChatCompletionStream, type ChatCompletionStreamParams } from \"../../../lib/ChatCompletionStream\";\n\nexport class Completions extends APIResource {\n  /**\n   * @deprecated - use `runTools` instead.\n   */\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner;\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStreamingRunner;\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body:\n      | ChatCompletionFunctionRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner | ChatCompletionStreamingRunner {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runFunctions(\n        this._client.chat.completions,\n        body as ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n        options,\n      );\n    }\n    return ChatCompletionRunner.runFunctions(\n      this._client.chat.completions,\n      body as ChatCompletionFunctionRunnerParams<FunctionsArgs>,\n      options,\n    );\n  }\n\n  /**\n   * A convenience helper for using tool calls with the /chat/completions endpoint\n   * which automatically calls the JavaScript functions you provide and sends their\n   * results back to the /chat/completions endpoint, looping as long as the model\n   * requests function calls.\n   *\n   * For more details and examples, see\n   * [the docs](https://github.com/openai/openai-node#automated-function-calls)\n   */\n  runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionToolRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner;\n  runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStreamingRunner;\n  runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    body:\n      | ChatCompletionToolRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner | ChatCompletionStreamingRunner {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(\n        this._client.chat.completions,\n        body as ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n        options,\n      );\n    }\n    return ChatCompletionRunner.runTools(\n      this._client.chat.completions,\n      body as ChatCompletionToolRunnerParams<FunctionsArgs>,\n      options,\n    );\n  }\n\n  /**\n   * Creates a chat completion stream\n   */\n  stream(body: ChatCompletionStreamParams, options?: Core.RequestOptions): ChatCompletionStream {\n    return ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n  }\n}\n"],"mappings":";;AAAA;;;;;AAGA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,sBAAA,GAAAD,OAAA;AACA,IAAAE,sBAAA,GAAAF,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAL,sBAAA,CAAAM,oBAAoB;EAAA;AAAA;AAC7B,MAAAC,+BAAA,GAAAT,OAAA;AAIA,IAAAU,+BAAA,GAAAV,OAAA;AACEG,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAG,+BAAA,CAAAC,6BAA6B;EAAA;AAAA;AAI/B,IAAAC,kBAAA,GAAAZ,OAAA;AAKEG,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAK,kBAAA,CAAAC,eAAe;EAAA;AAAA;AACfV,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAK,kBAAA,CAAAE,mBAAmB;EAAA;AAAA;AAMrB,MAAAC,sBAAA,GAAAf,OAAA;AACA,IAAAgB,sBAAA,GAAAhB,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAS,sBAAA,CAAAC,oBAAoB;EAAA;AAAA;AAE7B,MAAaC,WAAY,SAAQnB,UAAA,CAAAoB,WAAW;EAY1CC,YAAYA,CACVC,IAE8D,EAC9DC,OAA6B;IAE7B,IAAID,IAAI,CAACE,MAAM,EAAE;MACf,OAAOd,+BAAA,CAAAE,6BAA6B,CAACS,YAAY,CAC/C,IAAI,CAACI,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAAkE,EAClEC,OAAO,CACR;;IAEH,OAAOrB,sBAAA,CAAAO,oBAAoB,CAACY,YAAY,CACtC,IAAI,CAACI,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAAyD,EACzDC,OAAO,CACR;EACH;EAmBAK,QAAQA,CACNN,IAE0D,EAC1DC,OAA6B;IAE7B,IAAID,IAAI,CAACE,MAAM,EAAE;MACf,OAAOd,+BAAA,CAAAE,6BAA6B,CAACgB,QAAQ,CAC3C,IAAI,CAACH,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAA8D,EAC9DC,OAAO,CACR;;IAEH,OAAOrB,sBAAA,CAAAO,oBAAoB,CAACmB,QAAQ,CAClC,IAAI,CAACH,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAAqD,EACrDC,OAAO,CACR;EACH;EAEA;;;EAGAC,MAAMA,CAACF,IAAgC,EAAEC,OAA6B;IACpE,OAAOP,sBAAA,CAAAE,oBAAoB,CAACW,oBAAoB,CAAC,IAAI,CAACJ,OAAO,CAACC,IAAI,CAACC,WAAW,EAAEL,IAAI,EAAEC,OAAO,CAAC;EAChG;;AA1EFjB,OAAA,CAAAa,WAAA,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
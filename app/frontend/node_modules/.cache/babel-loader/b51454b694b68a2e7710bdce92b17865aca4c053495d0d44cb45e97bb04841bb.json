{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://api.openai.com/v1\";\n\n// Include a session ID parameter in your function\nexport const fetchChatGPTResponse = async (prompt, sessionId) => {\n  try {\n    console.log(process.env.REACT_APP_GPT_KEY);\n    const bodyContent = {\n      model: \"gpt-4\",\n      // Specify the model you are using\n      messages: [{\n        role: \"user\",\n        content: prompt\n      }]\n    };\n\n    // If a session ID is provided, use it in the request body to maintain context\n    if (sessionId) {\n      bodyContent.session_id = sessionId;\n    }\n    const response = await axios.post(`${BASE_URL}/chat/completions`, bodyContent, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_GPT_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // Return both the data and the session ID used\n    return {\n      data: response.data,\n      sessionId: response.data.session_id // Assuming the API returns a session_id\n    };\n  } catch (error) {\n    console.error(\"Error calling OpenAI API:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","fetchChatGPTResponse","prompt","sessionId","console","log","process","env","REACT_APP_GPT_KEY","bodyContent","model","messages","role","content","session_id","response","post","headers","Authorization","data","error"],"sources":["/Users/wavydang/Desktop/GitDesktop/Bitcamp24/app/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.openai.com/v1\";\n\n// Include a session ID parameter in your function\nexport const fetchChatGPTResponse = async (prompt, sessionId) => {\n  try {\n    console.log(process.env.REACT_APP_GPT_KEY);\n\n    const bodyContent = {\n      model: \"gpt-4\", // Specify the model you are using\n      messages: [{ role: \"user\", content: prompt }],\n    };\n\n    // If a session ID is provided, use it in the request body to maintain context\n    if (sessionId) {\n      bodyContent.session_id = sessionId;\n    }\n\n    const response = await axios.post(\n      `${BASE_URL}/chat/completions`,\n      bodyContent,\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_GPT_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    // Return both the data and the session ID used\n    return {\n      data: response.data,\n      sessionId: response.data.session_id, // Assuming the API returns a session_id\n    };\n  } catch (error) {\n    console.error(\"Error calling OpenAI API:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EAC/D,IAAI;IACFC,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;IAE1C,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAE,OAAO;MAAE;MAChBC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEX;MAAO,CAAC;IAC9C,CAAC;;IAED;IACA,IAAIC,SAAS,EAAE;MACbM,WAAW,CAACK,UAAU,GAAGX,SAAS;IACpC;IAEA,MAAMY,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC9B,GAAEhB,QAAS,mBAAkB,EAC9BS,WAAW,EACX;MACEQ,OAAO,EAAE;QACPC,aAAa,EAAG,UAASZ,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC;QACxD,cAAc,EAAE;MAClB;IACF,CACF,CAAC;;IAED;IACA,OAAO;MACLW,IAAI,EAAEJ,QAAQ,CAACI,IAAI;MACnBhB,SAAS,EAAEY,QAAQ,CAACI,IAAI,CAACL,UAAU,CAAE;IACvC,CAAC;EACH,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdhB,OAAO,CAACgB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
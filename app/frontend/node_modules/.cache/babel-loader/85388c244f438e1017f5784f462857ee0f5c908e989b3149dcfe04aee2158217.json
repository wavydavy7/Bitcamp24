{"ast":null,"code":"// API function in api.js\nimport axios from \"axios\";\nconst BASE_URL = \"https://api.openai.com/v1\";\nexport const fetchChatGPTResponse = async (prompt, sessionId) => {\n  try {\n    const bodyContent = {\n      model: \"gpt-4\",\n      messages: [{\n        role: \"user\",\n        content: prompt\n      }],\n      session_id: sessionId // Maintain session continuity\n    };\n    const response = await axios.post(`${BASE_URL}/chat/completions`, bodyContent, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_GPT_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return {\n      responseText: response.data.choices[0].message.content,\n      sessionId: response.data.session_id // Capture the session ID from the response\n    };\n  } catch (error) {\n    console.error(\"Error calling OpenAI API:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","fetchChatGPTResponse","prompt","sessionId","bodyContent","model","messages","role","content","session_id","response","post","headers","Authorization","process","env","REACT_APP_GPT_KEY","responseText","data","choices","message","error","console"],"sources":["/Users/wavydang/Desktop/GitDesktop/Bitcamp24/app/frontend/src/api.js"],"sourcesContent":["// API function in api.js\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://api.openai.com/v1\";\n\nexport const fetchChatGPTResponse = async (prompt, sessionId) => {\n  try {\n    const bodyContent = {\n      model: \"gpt-4\",\n      messages: [{ role: \"user\", content: prompt }],\n      session_id: sessionId, // Maintain session continuity\n    };\n\n    const response = await axios.post(\n      `${BASE_URL}/chat/completions`,\n      bodyContent,\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_GPT_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return {\n      responseText: response.data.choices[0].message.content,\n      sessionId: response.data.session_id, // Capture the session ID from the response\n    };\n  } catch (error) {\n    console.error(\"Error calling OpenAI API:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EAC/D,IAAI;IACF,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEN;MAAO,CAAC,CAAC;MAC7CO,UAAU,EAAEN,SAAS,CAAE;IACzB,CAAC;IAED,MAAMO,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC9B,GAAEX,QAAS,mBAAkB,EAC9BI,WAAW,EACX;MACEQ,OAAO,EAAE;QACPC,aAAa,EAAG,UAASC,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC;QACxD,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,OAAO;MACLC,YAAY,EAAEP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACZ,OAAO;MACtDL,SAAS,EAAEO,QAAQ,CAACQ,IAAI,CAACT,UAAU,CAAE;IACvC,CAAC;EACH,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
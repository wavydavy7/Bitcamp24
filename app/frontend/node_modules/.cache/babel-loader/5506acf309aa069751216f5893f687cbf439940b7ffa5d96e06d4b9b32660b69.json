{"ast":null,"code":"var _jsxFileName = \"/Users/wavydang/Desktop/GitDesktop/Bitcamp24/app/frontend/src/Components/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createdThread, moreThread } from \"../api\";\nimport \"./chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst secretsManager = {\n  // Mocking your secretsManager's getSecretValue function for illustration purposes.\n  // Replace this with your actual implementation to get the secret values.\n  getSecretValue: async () => {\n    return Promise.resolve({\n      // This should be the actual secret containing your OpenAI API Key\n      SecretString: '{\"openAIApiKey\":\"sk-proj-oHVCYNSrMDnpMN60OEdRT3BlbkFJodsGuig9RzYwyjGB5o43\"}'\n    });\n  }\n};\n(async () => {\n  const nonProxyCredentials = await secretsManager.getSecretValue();\n  const nonProxyCredentialsJson = JSON.parse(nonProxyCredentials.SecretString);\n  const configuration = new Configuration({\n    apiKey: nonProxyCredentialsJson.openAIApiKey\n  });\n  const openai = new OpenAIApi(configuration);\n  try {\n    const response = await openai.createChat({\n      model: \"gpt-4\",\n      messages: [{\n        role: \"user\",\n        content: \"Hey Frank\"\n      }]\n    });\n    console.log(response.data); // This will log the entire response object\n    // Your session ID will be part of the response, you can access it like this:\n    const sessionId = response.data.id; // Replace 'id' with the actual key where the session ID is stored\n    console.log(`Session ID: ${sessionId}`);\n  } catch (error) {\n    console.error(`Failed to create thread:`, error);\n  }\n})();\nconst ChatComponent = () => {\n  _s();\n  const asst = \"asst_NFZGI7Ab3tc8svHqKHkZQWDy\";\n  console.log(\"success\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [times, setTimes] = useState(0);\n  const handleInputChange = event => {\n    setPrompt(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!prompt) return;\n    renderMessageEle(prompt, \"user\");\n    setPrompt(\"\");\n    try {\n      let data = null;\n      if (times == 0) {\n        data = await createdThread(prompt);\n      } else {\n        data = await moreThread(prompt);\n      }\n      if (data && data.choices && data.choices.length > 0) {\n        const responseText = data.choices[0].message.content;\n        setResponse(responseText); // Update response state\n        renderMessageEle(responseText, \"chatbot\"); // Render bot response\n        setScrollPosition(); // Adjust scroll if necessary\n      } else {\n        console.error(\"No data received or data format incorrect.\");\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch response:\", error);\n      renderMessageEle(\"Failed to fetch response.\", \"chatbot\"); // Show error message in chat\n    }\n  };\n  const renderMessageEle = (txt, type) => {\n    const chatBody = document.getElementById(\"chat-body\");\n    if (!chatBody) {\n      console.error(\"Chat body element not found!\");\n      return; // Exit the function if chatBody is null\n    }\n    let className = \"user-message\";\n    if (type !== \"user\") {\n      className = \"chatbot-message\";\n    }\n    const messageEle = document.createElement(\"div\");\n    const txtNode = document.createTextNode(txt);\n    messageEle.classList.add(className);\n    messageEle.append(txtNode);\n    chatBody.append(messageEle);\n  };\n  const setScrollPosition = () => {\n    const chatBody = document.getElementById(\"chat-body\");\n    if (!chatBody) {\n      console.error(\"Chat body element not found!\");\n      return; // Exit the function if chatBody is null\n    }\n    if (chatBody.scrollHeight > 0) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        id: \"chat-body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"in\"\n            // type=\"text\"\n            ,\n            value: prompt,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sub\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 2048 2048\",\n              width: \"30\",\n              height: \"28\",\n              fill: \"#3485F7\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M221 1027h931l128-64-128-64H223L18 77l1979 883L18 1843l203-816z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"m6P15p42SmnOCfRPjKK9WNCG7v8=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","createdThread","moreThread","jsxDEV","_jsxDEV","Configuration","OpenAIApi","require","secretsManager","getSecretValue","Promise","resolve","SecretString","nonProxyCredentials","nonProxyCredentialsJson","JSON","parse","configuration","apiKey","openAIApiKey","openai","response","createChat","model","messages","role","content","console","log","data","sessionId","id","error","ChatComponent","_s","asst","prompt","setPrompt","setResponse","times","setTimes","handleInputChange","event","target","value","handleSubmit","preventDefault","renderMessageEle","choices","length","responseText","message","setScrollPosition","txt","type","chatBody","document","getElementById","className","messageEle","createElement","txtNode","createTextNode","classList","add","append","scrollHeight","scrollTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","xmlns","viewBox","width","height","fill","d","_c","$RefreshReg$"],"sources":["/Users/wavydang/Desktop/GitDesktop/Bitcamp24/app/frontend/src/Components/Chat.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createdThread, moreThread } from \"../api\";\nimport \"./chat.css\";\nimport { render } from \"react-dom\";\nconst { Configuration, OpenAIApi } = require(\"openai\");\nconst secretsManager = {\n  // Mocking your secretsManager's getSecretValue function for illustration purposes.\n  // Replace this with your actual implementation to get the secret values.\n  getSecretValue: async () => {\n    return Promise.resolve({\n      // This should be the actual secret containing your OpenAI API Key\n      SecretString:\n        '{\"openAIApiKey\":\"sk-proj-oHVCYNSrMDnpMN60OEdRT3BlbkFJodsGuig9RzYwyjGB5o43\"}',\n    });\n  },\n};\n(async () => {\n  const nonProxyCredentials = await secretsManager.getSecretValue();\n  const nonProxyCredentialsJson = JSON.parse(nonProxyCredentials.SecretString);\n\n  const configuration = new Configuration({\n    apiKey: nonProxyCredentialsJson.openAIApiKey,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const response = await openai.createChat({\n      model: \"gpt-4\",\n      messages: [\n        {\n          role: \"user\",\n          content: \"Hey Frank\",\n        },\n      ],\n    });\n\n    console.log(response.data); // This will log the entire response object\n    // Your session ID will be part of the response, you can access it like this:\n    const sessionId = response.data.id; // Replace 'id' with the actual key where the session ID is stored\n    console.log(`Session ID: ${sessionId}`);\n  } catch (error) {\n    console.error(`Failed to create thread:`, error);\n  }\n})();\nconst ChatComponent = () => {\n  const asst = \"asst_NFZGI7Ab3tc8svHqKHkZQWDy\";\n  console.log(\"success\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [times, setTimes] = useState(0);\n\n  const handleInputChange = (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setPrompt(event.target.value);\n  };\n\n  const handleSubmit = async (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n    if (!prompt) return;\n\n    renderMessageEle(prompt, \"user\");\n    setPrompt(\"\");\n    try {\n      let data = null;\n      if (times == 0) {\n        data = await createdThread(prompt);\n      } else {\n        data = await moreThread(prompt);\n      }\n\n      if (data && data.choices && data.choices.length > 0) {\n        const responseText = data.choices[0].message.content;\n        setResponse(responseText); // Update response state\n        renderMessageEle(responseText, \"chatbot\"); // Render bot response\n        setScrollPosition(); // Adjust scroll if necessary\n      } else {\n        console.error(\"No data received or data format incorrect.\");\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch response:\", error);\n      renderMessageEle(\"Failed to fetch response.\", \"chatbot\"); // Show error message in chat\n    }\n  };\n\n  const renderMessageEle = (txt: string, type: string) => {\n    const chatBody = document.getElementById(\"chat-body\");\n    if (!chatBody) {\n      console.error(\"Chat body element not found!\");\n      return; // Exit the function if chatBody is null\n    }\n    let className = \"user-message\";\n    if (type !== \"user\") {\n      className = \"chatbot-message\";\n    }\n    const messageEle = document.createElement(\"div\");\n    const txtNode = document.createTextNode(txt);\n    messageEle.classList.add(className);\n    messageEle.append(txtNode);\n    chatBody.append(messageEle);\n  };\n\n  const setScrollPosition = () => {\n    const chatBody = document.getElementById(\"chat-body\");\n    if (!chatBody) {\n      console.error(\"Chat body element not found!\");\n      return; // Exit the function if chatBody is null\n    }\n    if (chatBody.scrollHeight > 0) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"chat-body\" id=\"chat-body\"></div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-container\">\n            <textarea\n              className=\"in\"\n              // type=\"text\"\n              value={prompt}\n              onChange={handleInputChange}\n            />\n            <button className=\"sub\" type=\"submit\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 2048 2048\"\n                width=\"30\"\n                height=\"28\"\n                fill=\"#3485F7\"\n              >\n                <path d=\"M221 1027h931l128-64-128-64H223L18 77l1979 883L18 1843l203-816z\" />\n              </svg>\n            </button>\n          </div>\n        </form>\n        {/* {response && <p>Response: {response}</p>} */}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}